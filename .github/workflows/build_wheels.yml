# This is a basic workflow to help you get started with Actions

name: Build Wheels

on:
  push:
  create:
    tags: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: python -m pip install build twine

      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: runner.os == 'Linux'
        name: Install dependencies
        with:
          packages: build-essential cmake git libeigen3-dev liblapacke-dev libopenblas-dev libpcap-dev libusb-1.0-0-dev zlib1g-dev

      - name: Build
        run: python -m build --wheel

      - uses: actions/upload-artifact@v4
        name: Upload
        with:
          path: ${{runner.workspace}}/dist

      - name: Upload with twine
        run: |
          python -m pip install twine
          python -m twine upload dist/*.whl --skip-existing
        continue-on-error: true
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
